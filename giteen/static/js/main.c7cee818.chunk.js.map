{"version":3,"sources":["assets/logo.png","config/app.config.js","config/api.config.js","config/store.config.js","services/http.service.js","services/store.service.js","services/student.service.js","styles/icons.js","components/Wrapper/styled.js","components/Wrapper/index.js","components/Resume/styled.js","components/Resume/index.js","components/Lesson/styled.js","components/GroupButton/styled.js","components/GroupButton/index.js","components/SEO/index.js","components/SEO/content.js","components/Layout/index.js","components/LessonsBar/styled.js","components/LessonsBar/index.js","components/Links/styled.js","components/Links/index.js","components/TitleBar/styled.js","components/TitleBar/content.js","components/TitleBar/index.js","components/Video/styled.js","components/Video/index.js","components/Lesson/index.js","components/Loader/styled.js","components/Loader/index.js","components/Notification/styled.js","components/Notification/index.js","pages/Home/index.js","pages/Login/styled.js","pages/Login/index.js","routes/root.routes.js","routes/index.js","styles/colors.js","styles/global.js","App.js","index.js"],"names":["module","exports","Object","freeze","mode","process","publicURL","headers","Accept","Configs","production","baseURL","development","App","key","$http","axios","create","ApiConfig","interceptors","request","use","req","AppConfig","console","log","response","res","err","warn","get","raw","window","localStorage","getItem","Config","JSON","parse","clean","removeItem","set","payload","prev","setItem","stringify","getInfo","email","then","data","getLessons","Authorization","$store","token","Link","link","Telegram","whatsapp","telegram","Title","styled","h3","Wrapper","title","className","children","defaultProps","ResumeWrapper","ResumeContent","div","p","ButtonHelp","ButtonWrapper","a","ButtonIcon","ButtonLabel","Resume","entries","href","target","rel","VideoContainer","BottomResume","GroupButton","SEO","author","description","lang","meta","name","htmlAttributes","titleTemplate","content","property","concat","Layout","beforeLine","css","LessonsBarWrapper","ul","LessonItemHeader","LessonItemAvailableSub","span","LessonItemAvailable","LessonItem","li","LessonItemTitle","LessonItemStep","LessonsBar","lessons","onClick","onlyActive","length","map","each","step","active","availableAt","LinksContainer","LinksWrapper","LinkItem","LinkIcon","LinkLabel","Links","url","label","alt","TitleBarWrapper","TitleBarBrand","h2","img","brand","src","BrandImg","TitleBar","lesson","login","Content","Video","iframe","frameBorder","allow","allowFullScreen","Lesson","groupButton","loginButton","onlyActiveLessons","onSelectLesson","video","ries","spin","LoaderOverlay","LoaderSpinner","Loader","NotificationWrapper","section","NotificationHeader","h1","CloseButton","button","NotificationBody","NotificationFooter","footer","props","progress","Notification","onClose","timeout","useState","timer","tick","state","setState","onCloseHandler","clearTimeout","clearInterval","useEffect","setInterval","setTimeout","HomePage","history","notification","loading","push","id","find","document","querySelector","getClientRects","top","actual","scrollY","scrollTo","left","behavior","input","form","Login","path","exact","component","Home","RootRoutes","colors","GlobalStyles","createGlobalStyle","AppContainer","basename","Routes","route","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c7cee818.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.df59b364.png\";","const mode = process.env.NODE_ENV || 'development';\n\nconst publicURLS = {\n  production: '/semana-digital-do-varejo/itapetininga/aula',\n  development: '',\n};\n\nexport default Object.freeze({ mode, publicURL: publicURLS[mode] });\n","import App from './app.config';\n\nconst headers = {\n  'Content-Type': 'application/json; charset=utf-8',\n  Accept: 'application/json; charset=utf-8',\n};\n\nconst Configs = {\n  production: { baseURL: 'http://45.77.211.66:3330/api', headers },\n  development: { baseURL: 'http://localhost:3330/api', headers },\n};\n\nexport default Object.freeze(Configs[App.mode]);\n","import App from './app.config';\n\nconst config = {\n  production: {\n    key: 'SemanaDigitaldoVarejo@data',\n  },\n  development: {\n    key: 'SemanaDigitaldoVarejo@user',\n  },\n};\n\nexport default Object.freeze(config[App.mode]);\n","import axios from 'axios';\n\nimport { API as ApiConfig, App as AppConfig } from '../config';\n\nconst $http = axios.create(ApiConfig);\n\n$http.interceptors.request.use(req => {\n  if (AppConfig.mode === 'development') console.log(req);\n  return req;\n});\n\n$http.interceptors.response.use(\n  res => {\n    if (AppConfig.mode === 'development') console.log(res);\n    return res;\n  },\n  err => {\n    if (AppConfig.mode === 'development') {\n      console.warn('Fail Request');\n      console.log(err.response);\n    }\n\n    throw err.response;\n  },\n);\n\nexport default $http;\n","import { Store as Config } from '../config';\n\nconst get = () => {\n  const raw = window.localStorage.getItem(Config.key) || '{}';\n  return JSON.parse(raw);\n};\n\nconst set = payload => {\n  const prev = get();\n  window.localStorage.setItem(\n    Config.key,\n    JSON.stringify({ ...prev, ...payload }),\n  );\n  return get();\n};\n\nconst clean = () => window.localStorage.removeItem(Config.key);\n\nexport default { clean, get, set };\n","import $http from './http.service';\nimport $store from './store.service';\n\nconst basePath = '/students';\n\nconst getLessons = () => {\n  const { token: Authorization } = $store.get();\n  return $http\n    .get(`${basePath}/lessons`, { headers: { Authorization } })\n    .then(res => res.data);\n};\n\nconst getInfo = email =>\n  $http.get(`${basePath}/${email}?key=email`).then(res => res.data);\n\nexport default { getInfo, getLessons };\n","import { LinkAlt as link } from 'styled-icons/boxicons-regular/LinkAlt';\nimport { Whatsapp as whatsapp } from 'styled-icons/fa-brands/Whatsapp';\nimport { Telegram as telegram } from 'styled-icons/fa-brands/Telegram';\n\nexport const Link = link;\nexport const WhatsApp = whatsapp;\nexport const Telegram = telegram;\n\nexport default { Link, WhatsApp, Telegram };\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  color: var(--lightest);\n  font-size: 1.6rem;\n  font-weight: 600;\n  margin: 0 0 1rem 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as S from './styled';\n\nfunction Wrapper({ title, className, children }) {\n  return (\n    <div className={`wrapper ${className}`}>\n      <S.Title className=\"title\">{title}</S.Title>\n      {children}\n    </div>\n  );\n}\n\nWrapper.defaultProps = { className: '' };\n\nWrapper.propTypes = {\n  title: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Wrapper;\n","import styled from 'styled-components';\n\nimport Wrapper from '../Wrapper';\n\nexport const ResumeWrapper = styled(Wrapper)`\n  padding: 0 3.2rem 3.2rem 3.2rem;\n  @media (min-width: 1200px) {\n    margin: 0 auto;\n    max-width: 1200px;\n    padding: 0 0 3.2rem 0;\n  }\n  @media (min-width: 1400px) {\n    max-width: 1400px;\n  }\n`;\n\nexport const Breakline = styled.div`\n  height: 2.4rem;\n`;\n\nexport const ResumeContent = styled.p`\n  color: var(--lightest);\n  font-size: 1.6rem;\n  line-height: 148%;\n\n  :not(:last-of-type) {\n    margin: 0 0 0.8rem 0;\n  }\n`;\n\n\nexport const ButtonHelp = styled.p`\n  color: var(--lightest);\n  font-size: 1.6rem;\n  line-height: 140%;\n  margin: 0 0 1.6rem 0;\n\n  > .strong {\n    display: block;\n    font-size: 1em;\n    font-weight: 600;\n    margin: 0 0 0.4rem 0;\n    width: 100%;\n  }\n`;\n\nexport const ButtonWrapper = styled.a`\n  align-items: center;\n  background-color: var(--auxColor2);\n  border-radius: 2px;\n  box-shadow: rgba(0, 0, 0, 0.2);\n  color: var(--lightest);\n  display: flex;\n  justify-content: center;\n  min-height: 4.8rem;\n  padding: 0.4rem 2.4rem;\n  text-align: center;\n  width: 100%;\n  white-space: nowrap;\n  @media (min-width: 1024px) {\n    width: fit-content;\n  }\n`;\nexport const ButtonIcon = styled.div`\n  height: 2.1rem;\n  margin: 0 0.64rem 0 0;\n  width: 1.8rem;\n`;\n\nexport const ButtonLabel = styled.p`\n  font-size: 1.4rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Telegram as Icon } from '../../styles/icons';\n\nimport * as S from './styled';\n\nfunction Resume({ className, entries }) {\n  return (\n    <S.ResumeWrapper className={`resume ${className}`} title=\"\">\n      <S.ResumeContent>\n        {entries}\n      </S.ResumeContent>\n\n      <S.ButtonHelp>\n        <span className=\"strong\" />\n        {/* Acesse nosso GRUPO do WHATSAPP. Ele estará aberto das 18h às 21h para\n        perguntas. */}\n      </S.ButtonHelp>\n      <S.ButtonWrapper href=\"https://web.telegram.org/#/im?p=@giteenbot\" target=\"blank\" rel=\"noreferrer noopener\">\n        <S.ButtonIcon>\n          <Icon />\n        </S.ButtonIcon>\n        <S.ButtonLabel>Fale com o Yoda...</S.ButtonLabel>\n      </S.ButtonWrapper>\n\n    </S.ResumeWrapper>\n  );\n}\n\nResume.defaultProps = { className: '', entries: [] };\n\nResume.propTypes = {\n  className: PropTypes.string,\n  entries: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Resume;\n","import styled from 'styled-components';\n\nimport Resume from '../Resume';\n\nexport const VideoInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  border: 1px solid #fff;\n  @media (min-width: 1024px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    padding: 4rem 0;\n  }\n  @media (min-width: 1200px) {\n    margin: 0 auto;\n    max-width: 1200px;\n  }\n  @media (min-width: 1400px) {\n    max-width: 1400px;\n  }\n`;\n\nexport const VideoContainer = styled.div`\n  --lg: calc((100vw - 1200px) / 2);\n  --xl: calc((100vw - 1400px) / 2);\n\n  background-color: var(--darkest);\n  display: block;\n  /* border-bottom: 1px solid var(--lightest); */\n  height: 24rem;\n\n  > .resume {\n    overflow-y: scroll;\n    padding: 0 6.4rem 3.2rem 3.2rem;\n    height: 100%;\n    padding-top: 5rem;\n  }\n\n  @media (min-width: 425px) {\n    height: 32rem;\n  }\n  @media (min-width: 768px) {\n    height: 56rem;\n  }\n  @media (min-height: 900px) {\n    height: 64rem;\n  }\n  @media (min-height: 1000px) {\n    height: 72rem;\n  }\n  @media (min-width: 1200px) {\n    display: grid;\n    grid-template-columns: 3fr 1fr;\n    padding: 0 var(--lg);\n    > .resume {\n      /* padding: 0 0 3.2rem 3.2rem; */\n    }\n  }\n  @media (min-width: 1400px) {\n    padding: 0 var(--xl);\n  }\n  @media (max-width: 1199px) {\n    > .resume {\n      display: none;\n    }\n  }\n`;\n\nexport const BottomResume = styled(Resume)`\n  @media (min-width: 1200px) {\n    display: none;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* text-align:center; */\n\n  padding: 3.2rem 3.2rem 0 3.2rem;\n  @media (min-width: 1024px) {\n    padding: 0;\n  }\n`;\n\nexport const ButtonHelp = styled.p`\n  color: var(--lightest);\n  font-size: 1.6rem;\n  line-height: 140%;\n  margin: 0 0 1.6rem 0;\n\n  > .strong {\n    display: block;\n    font-size: 1em;\n    font-weight: 600;\n    margin: 0 0 0.4rem 0;\n    width: 100%;\n  }\n`;\n\nexport const ButtonWrapper = styled.a`\n  align-items: center;\n  background-color: var(--auxColor);\n  border-radius: 2px;\n  box-shadow: rgba(0, 0, 0, 0.2);\n  color: var(--darkest);\n  display: flex;\n  justify-content: center;\n  min-height: 4.8rem;\n  padding: 0.4rem 2.4rem;\n  text-align: center;\n  width: 100%;\n  white-space: nowrap;\n  @media (min-width: 1024px) {\n    width: fit-content;\n  }\n`;\nexport const ButtonIcon = styled.div`\n  height: 2.1rem;\n  margin: 0 0.64rem 0 0;\n  width: 1.8rem;\n`;\n\nexport const ButtonLabel = styled.p`\n  font-size: 1.4rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Telegram as Icon } from '../../styles/icons';\n\nimport * as S from './styled';\n\nfunction GroupButton({ url }) {\n  return (\n    <S.ButtonContainer>\n      <S.ButtonHelp>\n        <span className=\"strong\">Fale com o Yoda...</span>\n        {/* Acesse nosso GRUPO do WHATSAPP. Ele estará aberto das 18h às 21h para\n        perguntas. */}\n      </S.ButtonHelp>\n      <S.ButtonWrapper href={url} target=\"blank\" rel=\"noreferrer noopener\">\n        <S.ButtonIcon>\n          <Icon />\n        </S.ButtonIcon>\n        <S.ButtonLabel>Telegram</S.ButtonLabel>\n      </S.ButtonWrapper>\n    </S.ButtonContainer>\n  );\n}\n\nGroupButton.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nexport default GroupButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nimport DefaultMeta from './content';\n\nfunction SEO({ author, description, lang, meta, name, title }) {\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={title ? `%s | ${name}` : name}\n      meta={[\n        {\n          name: 'description',\n          content: description,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: description,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: description,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = DefaultMeta;\n\nSEO.propTypes = {\n  author: PropTypes.string,\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  name: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","export default {\n  author: '@entrecliques',\n  description: 'Itapetininga, São Paulo',\n  lang: 'pt-br',\n  name: 'Semana Digital do Varejo',\n  meta: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SEO from '../SEO';\n\nfunction Layout({ title, className, children }) {\n  return (\n    <section className={className}>\n      <SEO title={title} />\n      {children}\n    </section>\n  );\n}\n\nLayout.defaultProps = { className: '' };\n\nLayout.propTypes = {\n  title: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import styled, { css } from 'styled-components';\n\nconst beforeLine = css`\n  background-color: var(--primaryColor);\n  content: '';\n  display: block;\n  height: calc(100% - 64px);\n  left: 50%;\n  margin: auto;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 2px;\n  @media (min-width: 1024px) {\n    height: 2px;\n    max-width: calc(100vw - 128px);\n    width: 100%;\n  }\n  @media (min-width: 1200px) {\n    max-width: 1200px;\n  }\n  @media (min-width: 1400px) {\n    max-width: 1400px;\n  }\n`;\n\nexport const LessonsBarWrapper = styled.ul`\n  --lg: calc((100vw - 1200px) / 2);\n  --xl: calc((100vw - 1400px) / 2);\n\n  background-color: var(--darkest);\n  display: grid;\n  position: relative;\n  padding: 3.2rem;\n\n  &::before {\n    ${beforeLine}\n  }\n\n  @media (min-width: 768px) {\n    padding: 3.2rem 6.4rem;\n  }\n  @media (max-width: 1023px) {\n    grid-template-rows: repeat(5, 1fr);\n    row-gap: 2.4rem;\n  }\n  @media (min-width: 1024px) {\n    column-gap: 2.4rem;\n    padding: 3.2rem 6.4rem 4.8rem 6.4rem;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: 1fr;\n  }\n  @media (min-width: 1200px) {\n    padding: 3.2rem var(--lg) 4.8rem var(--lg);\n  }\n  @media (min-width: 1400px) {\n    column-gap: 4.8rem;\n    padding: 3.2rem var(--xl) 4.8rem var(--xl);\n  }\n`;\n\nexport const LessonItemHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  width: 65%;\n`;\n\nexport const LessonItemAvailableSub = styled.span`\n  color: var(--primaryColor);\n  font-size: 1.2rem;\n  text-align: right;\n`;\n\nexport const LessonItemAvailable = styled.p`\n  align-items: flex-end;\n  display: flex;\n  flex-direction: column;\n  color: var(--primaryColor);\n  font-size: 1.4em;\n  font-weight: 600;\n  justify-content: center;\n  line-height: 144%;\n  text-align: right;\n  width: 40%;\n`;\n\nexport const LessonItem = styled.li`\n  align-items: center;\n  background-color: var(--dark);\n  border-radius: 4px;\n  box-shadow: 0 2px 4px 1px rgba(0, 0, 0, 0.24);\n  cursor: not-allowed;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 1.6rem;\n  position: relative;\n  transition: background-color 400ms;\n  z-index: 1;\n  will-change: background-color;\n\n  &.--active {\n    background-color: var(--primaryColor);\n    cursor: pointer;\n    .step,\n    .title {\n      color: var(--dakest);\n    }\n    :hover {\n      background-color: var(--darkest);\n      .step,\n      .title {\n        color: var(--primaryColor);\n      }\n    }\n  }\n`;\n\nexport const LessonItemTitle = styled.p`\n  color: rgba(255, 200, 19, 0.4);\n  font-size: 1.6rem;\n  font-weight: 700;\n  line-height: 128%;\n  margin: 0.4rem 0 0 0;\n  transition: color 400ms;\n  text-transform: uppercase;\n`;\n\nexport const LessonItemStep = styled.span`\n  color: rgba(255, 200, 19, 0.4);\n  font-size: 1.6rem;\n  will-change: color 400ms;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as S from './styled';\n\nfunction LessonsBar({ lessons, onClick, onlyActive }) {\n  return lessons && lessons.length > 0 ? (\n    <S.LessonsBarWrapper>\n      {lessons.map(each => (\n        <S.LessonItem\n          key={each.step}\n          className={\n            (each.active && onlyActive) || !onlyActive ? '--active' : ''\n          }\n          onClick={() => onClick(each.step)}\n        >\n          <S.LessonItemHeader>\n            <S.LessonItemStep className=\"step featured\">{`#${each.step}`}</S.LessonItemStep>\n            <S.LessonItemTitle className=\"title\">\n              {each.title}\n            </S.LessonItemTitle>\n          </S.LessonItemHeader>\n          {!each.active && onlyActive ? (\n            <S.LessonItemAvailable>\n              {each.availableAt !== 'Expirado' ? (\n                <S.LessonItemAvailableSub>\n                  Disponível em:\n                </S.LessonItemAvailableSub>\n              ) : null}\n              {each.availableAt}\n            </S.LessonItemAvailable>\n          ) : null}\n        </S.LessonItem>\n      ))}\n    </S.LessonsBarWrapper>\n  ) : null;\n}\n\nLessonsBar.defaultProps = { lessons: [], onlyActive: true };\n\nLessonsBar.propTypes = {\n  lessons: PropTypes.arrayOf(\n    PropTypes.shape({\n      step: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func.isRequired,\n  onlyActive: PropTypes.bool,\n};\n\nexport default LessonsBar;\n","import styled from 'styled-components';\n\nimport Wrapper from '../Wrapper';\n\nexport const LinksContainer = styled(Wrapper)`\n  padding: 4rem 3.2rem;\n  @media (min-width: 1024px) {\n    padding: 0;\n  }\n`;\n\nexport const LinksWrapper = styled.ul``;\n\nexport const LinkItem = styled.li``;\n\nexport const Link = styled.a`\n  align-items: center;\n  color: var(--primaryColor);\n  display: flex;\n  padding: 0.64rem 0 0 0;\n  width: 100%;\n`;\n\nexport const LinkIcon = styled.div`\n  height: 2rem;\n  margin: 0 0.64rem 0 0;\n  width: 2rem;\n`;\n\nexport const LinkLabel = styled.span`\n  font-size: 1.6rem;\n  line-height: 144%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link as Icon } from '../../styles/icons';\nimport * as S from './styled';\n\nfunction Links({ entries }) {\n  return (\n    <S.LinksContainer title=\"Links da Aula\">\n      <S.LinksWrapper>\n        {entries.map(each => (\n          <S.LinkItem key={each.url}>\n            <S.Link\n              target=\"blank\"\n              rel=\"noreferrer noopener\"\n              key={each.url}\n              href={each.url}\n              title={each.label}\n              alt={each.label}\n            >\n              <S.LinkIcon>\n                <Icon />\n              </S.LinkIcon>\n              <S.LinkLabel>{each.label}</S.LinkLabel>\n            </S.Link>\n          </S.LinkItem>\n        ))}\n      </S.LinksWrapper>\n    </S.LinksContainer>\n  );\n}\n\nLinks.defaultProps = { entries: [] };\n\nLinks.propTypes = {\n  entries: PropTypes.arrayOf(\n    PropTypes.shape({\n      url: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Links;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const TitleBarWrapper = styled.div`\n  --lg: calc((100vw - 1200px) / 2);\n  --xl: calc((100vw - 1400px) / 2);\n\n  align-items: center;\n  background-color: var(--darkBlue);\n  box-shadow: 0 2px 4px 1px rgba(0, 0, 0, 0.24);\n  border-bottom: 5px solid var(--lightest);\n  display: flex;\n  /* justify-content: space-between; */\n  padding: 1.6rem 3.2rem;\n  width: 100%;\n  @media (min-width: 768px) {\n    padding: 1.6rem 3.2rem;\n  }\n  @media (min-width: 1200px) {\n    padding: 1.6rem var(--lg);\n  }\n  @media (min-width: 1400px) {\n    padding: 2.4rem var(--xl);\n  }\n`;\n\nexport const TitleBarTitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 1.6rem 0 2.4rem;\n  width: 100%;\n  @media (min-width: 425px) {\n    margin: 0 1.6rem 0 3.2rem;\n  }\n`;\n\nexport const TitleBarTitleDesc = styled.p`\n  color: var(--light);\n  font-size: 1.2rem;\n  margin: 0 0 0.4rem 0;\n  @media (min-width: 1024px) {\n    font-size: 1.4rem;\n  }\n`;\n\nexport const TitleBarLessonTitle = styled.h2`\n  color: var(--lightest);\n  font-size: 1.4rem;\n  font-weight: 600;\n  line-height: 120%;\n  width: 100%;\n  @media (min-width: 425px) {\n    font-size: 1.8rem;\n  }\n`;\n\nexport const TitleBarBrand = styled.img`\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n  width: 30rem;\n  margin: 0 auto;\n  /* @media (min-width: 768px) {\n    width: 16rem;\n  }\n  @media (min-width: 1200px) {\n    width: 18rem;\n  }\n  @media (min-width: 1600px) {\n    width: 20rem;\n  } */\n`;\n\nexport const LoginButton = styled(Link)`\n  align-items: center;\n  background-color: var(--auxColor);\n  border-radius: 2px;\n  color: var(--darkest);\n  cursor: pointer;\n  display: flex;\n  font-size: 1.4rem;\n  font-weight: 600;\n  height: 4.4rem;\n  justify-content: center;\n  padding: 0.8rem;\n  text-align: center;\n  text-transform: uppercase;\n  width: fit-content;\n`;\n","import BrandImg from '../../assets/logo.png';\n\nexport default {\n  brand: {\n    src: BrandImg,\n    title: 'Giteen',\n    alt: 'Giteen',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { $store } from '../../services';\n\nimport * as S from './styled';\nimport Content from './content';\n\nfunction TitleBar({ lesson, login }) {\n  return (\n    <S.TitleBarWrapper>\n      <S.TitleBarBrand {...Content.brand} />\n      {/* <S.TitleBarTitleWrapper>\n        {lesson ? (\n          <>\n            <S.TitleBarTitleDesc>Tema da Aula:</S.TitleBarTitleDesc>\n            <S.TitleBarLessonTitle>{lesson}</S.TitleBarLessonTitle>\n          </>\n        ) : null}\n      </S.TitleBarTitleWrapper> */}\n    </S.TitleBarWrapper>\n  );\n}\n\nTitleBar.defaultProps = { lesson: '', login: false };\n\nTitleBar.propTypes = { lesson: PropTypes.string, login: PropTypes.bool };\n\nexport default TitleBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n`;\n\nexport const Video = styled.iframe`\n  margin: auto;\n  height: 100%;\n  width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as S from './styled';\n\nfunction Video({ title, src }) {\n  return (\n    <S.Wrapper>\n      <S.Video\n        src={src}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n    </S.Wrapper>\n  );\n}\n\nVideo.propTypes = {\n  title: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n};\n\nexport default Video;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as S from './styled';\n\nimport GroupButton from '../GroupButton';\nimport Layout from '../Layout';\nimport LessonsBar from '../LessonsBar';\nimport Links from '../Links';\nimport Resume from '../Resume';\nimport TitleBar from '../TitleBar';\nimport Video from '../Video';\n\nfunction Lesson({\n  active,\n  groupButton,\n  lessons,\n  loginButton,\n  onlyActiveLessons,\n  onSelectLesson,\n}) {\n  return (\n    <Layout title=\"Aula 1\">\n      <TitleBar lesson={active.title} login={loginButton} />\n      <LessonsBar\n        lessons={lessons}\n        onClick={onSelectLesson}\n        onlyActive={onlyActiveLessons}\n      />\n      {active.step !== null ? (\n        <>\n          <S.VideoContainer>\n            <Video\n              src={active.video}\n              title={`Aula 1 - ${active.title}`}\n            />\n            <Resume entries=\"Como você está se preparando para o futuro ? No mundo atual tudo evolui muito rápido. Esse vídeo tem como objetivo de te mostrar quais as forças que impulsionam essas mudanças, e como vocẽ terá que se adaptar.\" />\n          </S.VideoContainer>\n          <S.BottomResume entries=\"Como você está se preparando para o futuro ? No mundo atual tudo evolui muito rápido. Esse vídeo tem como objetivo de te mostrar quais as forças que impulsionam essas mudanças, e como vocẽ terá que se adaptar.\" />\n\n        <S.VideoContainer>\n          <Video\n            src={active.video}\n            title={`Aula 1 - ${active.title}`}\n          />\n          <Resume entries=\"Nesse momento, iremos apresentar as principais habilidades que vocẽ precisa desenvolver ou aprimorar para entrar e se manter no mercado de trabalho.\" />\n        </S.VideoContainer>\n        <S.BottomResume entries=\"Nesse momento, iremos apresentar as principais habilidades que vocẽ precisa desenvolver ou aprimorar para entrar e se manter no mercado de trabalho.\" />\n\n        <S.VideoContainer>\n        <Video\n          src={active.video}\n          title={`Aula 1 - ${active.title}`}\n        />\n        <Resume entries=\"Agora que você conheceu as habilidades , vamos lhe apresentar a principal carreira que está no epicentro desta mudança, a de programador. Em esse video vamos conhecer um pouco mais de duas opções para embarcar nesse mercado, o programador frontend e o programador backend.\" />\n        </S.VideoContainer>\n        <S.BottomResume entries=\"Agora que você conheceu as habilidades , vamos lhe apresentar a principal carreira que está no epicentro desta mudança, a de programador. Em esse video vamos conhecer um pouco mais de duas opções para embarcar nesse mercado, o programador frontend e o programador backend.\" />\n\n        <S.VideoContainer>\n        <Video\n          src={active.video}\n          title={`Aula 1 - ${active.title}`}\n        />\n        <Resume entries=\"Continuando com a apresentação de carreiras na área de desenvolvimento, temos as carreiras de designer, cientista de dados e de inteligência artificial\" />\n        </S.VideoContainer>\n        <S.BottomResume ries=\"Continuando com a apresentação de carreiras na área de desenvolvimento, temos as carreiras de designer, cientista de dados e de inteligência artificial\" />\n\n        <S.VideoContainer>\n        <Video\n          src={active.video}\n          title={`Aula 1 - ${active.title}`}\n        />\n        <Resume entries=\"Gostou do que viu até agora, quer conhecer um pouco mais ? Nesse vídeo apresentamos a nossa ferramenta  um bot que irá de guiar em processo para descobrir em qual dessas carreiras você possui perfil. Uma vez que você tenha seu perfil, lhe indicaremos conteúdos para você conhecer um pouco mais essa carreira, e se se aprofundar mais.\" />\n        </S.VideoContainer>\n        <S.BottomResume entries=\"Gostou do que viu até agora, quer conhecer um pouco mais ? Nesse vídeo apresentamos a nossa ferramenta  um bot que irá de guiar em processo para descobrir em qual dessas carreiras você possui perfil. Uma vez que você tenha seu perfil, lhe indicaremos conteúdos para você conhecer um pouco mais essa carreira, e se se aprofundar mais.\" />\n\n        </>\n\n      ) : null}\n    </Layout>\n  );\n}\n\nconst lessonType = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  availableAt: PropTypes.string.isRequired,\n});\n\nLesson.defaultProps = {\n  groupButton: true,\n  loginButton: true,\n  onlyActiveLessons: false,\n};\nLesson.propTypes = {\n  active: lessonType.isRequired,\n  groupButton: PropTypes.bool,\n  lessons: PropTypes.arrayOf(lessonType).isRequired,\n  loginButton: PropTypes.bool,\n  onlyActiveLessons: PropTypes.bool,\n  onSelectLesson: PropTypes.func.isRequired,\n};\n\nexport default Lesson;\n","import styled, { css } from 'styled-components';\n\nconst spin = css`\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst active = css`\n  &.--active {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n\nexport const LoaderOverlay = styled.div`\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.96);\n  display: flex;\n  justify-content: center;\n  left: 0;\n  min-height: 100vh;\n  opacity: 0;\n  position: fixed;\n  top: 0;\n  transition: opacity 400ms;\n  visibility: hidden;\n  width: 100%;\n  will-change: opacity, visibility;\n  z-index: 999;\n\n  ${active}\n`;\n\nexport const LoaderSpinner = styled.div`\n  ${spin}\n  animation: spin .88s linear infinite;\n  border: 1.6rem solid rgba(255, 255, 255, 0.08);\n  border-bottom-color: var(--primaryColor);\n  border-radius: 50%;\n  height: 12rem;\n  width: 12rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as S from './styled';\n\nfunction Loader({ active }) {\n  return (\n    <S.LoaderOverlay className={active ? '--active' : ''}>\n      <S.LoaderSpinner />\n    </S.LoaderOverlay>\n  );\n}\n\nLoader.defaultProps = { active: false };\nLoader.propTypes = { active: PropTypes.bool };\n\nexport default Loader;\n","import styled, { css } from 'styled-components';\n\nconst active = css`\n  opacity: 1;\n  visibility: visible;\n`;\n\nexport const NotificationWrapper = styled.section`\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.32);\n  left: 0;\n  opacity: 0;\n  overflow: hidden;\n  position: fixed;\n  right: 0;\n  top: 0;\n  transition: opacity 400ms, visibility 400ms;\n  visibility: hidden;\n  width: 100%;\n  will-change: opacity, visibility;\n  z-index: 9;\n\n  @media (min-width: 1024px) {\n    left: auto;\n    top: 16px;\n    right: 16px;\n    max-width: 40rem;\n  }\n\n  &.--active {\n    ${active}\n  }\n`;\n\nexport const NotificationHeader = styled.div`\n  align-items: center;\n  background-color: var(--primaryColor);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.04);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  display: flex;\n  justify-content: space-between;\n  padding: 0.8rem 1.6rem;\n`;\n\nexport const Title = styled.h1`\n  color: var(--darkest);\n  font-size: 1.6rem;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nexport const CloseButton = styled.button`\n  --size: 4.8rem;\n\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  color: var(--darkest);\n  display: flex;\n  font-size: 2rem;\n  height: var(--size);\n  justify-content: center;\n  transform-origin: center;\n  transition: color 400ms, transform 400ms;\n  width: var(--size);\n  will-change: color, transform;\n\n  :hover {\n    color: var(--dark);\n  }\n\n  :active {\n    transform: scale(0.88);\n  }\n`;\n\nexport const NotificationBody = styled.div`\n  background-color: var(--lightest);\n  font-size: 1.6rem;\n  line-height: 136%;\n  padding: 1.6rem;\n`;\n\nexport const NotificationFooter = styled.footer`\n  background-color: var(--light);\n  height: 0.8rem;\n  position: relative;\n\n  :after {\n    background-color: var(--primaryColor);\n    content: '';\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    transform: ${props => `translateX(-${props.progress}%);`};\n    transition: transform 400ms linear;\n    will-change: transform;\n    width: 100%;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as S from './styled';\n\nfunction Notification({ active, content, onClose, timeout, title }) {\n  const [state, setState] = useState({\n    timer: 0,\n    tick: 0,\n    progress: 100,\n  });\n\n  function onCloseHandler() {\n    clearTimeout(state.timer);\n    clearInterval(state.tick);\n    setState(prev => ({ ...prev, timer: 0, tick: 0, active: false }));\n\n    onClose();\n  }\n\n  useEffect(() => {\n    if (active) {\n      const tick = setInterval(() => {\n        setState(prev => ({ ...prev, progress: prev.progress - 1 }));\n      }, timeout / 100);\n      const timer = setTimeout(onCloseHandler, timeout + 640);\n\n      return setState(prev => ({ ...prev, timer, tick }));\n    }\n    return onCloseHandler();\n  }, [active]);\n\n  return (\n    <S.NotificationWrapper className={active ? '--active' : ''}>\n      <S.NotificationHeader>\n        <S.Title>{title}</S.Title>\n        <S.CloseButton onClick={onCloseHandler}>x</S.CloseButton>\n      </S.NotificationHeader>\n      <S.NotificationBody>{content}</S.NotificationBody>\n      <S.NotificationFooter progress={state.progress} />\n    </S.NotificationWrapper>\n  );\n}\n\nNotification.defaultProps = { active: false, timeout: 5000 };\n\nNotification.propTypes = {\n  active: PropTypes.bool,\n  content: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  timeout: PropTypes.number,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { $lesson, $store } from '../../services';\n\nimport Lesson from '../../components/Lesson';\nimport Loader from '../../components/Loader';\nimport Notification from '../../components/Notification';\n\nfunction HomePage({ history }) {\n  const [state, setState] = useState({\n    lessons: [],\n    active: {\n      step: 'aula 1',\n      title: 'Público e Mercado',\n      video: 'https://www.youtube.com/embed/rHcpnd94ozg',\n    },\n    notification: {\n      active: false,\n      title: 'Lorem Ipsum',\n      content:\n        'Et temporibus distinctio labore minus corrupti. Accusamus dicta ab architecto reprehenderit minus eaque odit consequatur harum. Hic est ea in.',\n    },\n    loading: true,\n  });\n\n  useEffect(() => {\n    if ($store.get().token) {\n      history.push('/minhas-aulas');\n    } else {\n      // setState(prev => ({ ...prev, loading: true }));\n      // $lesson\n      //   .fetch()\n      //   .then(payload => {\n      //     const active = payload.find(each => each.active) || {\n      //       step: null,\n      //       title: '',\n      //     };\n      //     setState(prev => ({ ...prev, active, lessons: payload }));\n      //   })\n      //   .catch(() => {\n      //     const title = 'Ooops...';\n      //     const content =\n      //       'Ocorreu um erro ao tentar recuperar as aulas, por favor, tente novamente mais tarde!';\n      //     const timeout = 6000;\n      //     setState(prev => ({\n      //       ...prev,\n      //       notification: {\n      //         ...prev.notification,\n      //         active: true,\n      //         title,\n      //         content,\n      //         timeout,\n      //       },\n      //     }));\n      //   })\n      //   .finally(() => {\n      //     setState(prev => ({ ...prev, loading: false }));\n      //   });\n    }\n  }, []);\n\n  function onNotificationClose() {\n    return setState(prev => ({\n      ...prev,\n      notification: { ...prev.notification, active: false },\n    }));\n  }\n\n  function onSelectLesson(step) {\n    setState(prev => ({ ...prev, loading: true }));\n\n    const { lessons } = state;\n    const active = lessons.find(each => each.step === step);\n\n    const [{ top }] = document.querySelector('#player').getClientRects();\n    const actual = window.scrollY;\n    window.scrollTo({\n      top: top + actual - 8,\n      left: 0,\n      behavior: 'smooth',\n    });\n\n    setState(prev => ({ ...prev, active, loading: false }));\n    return step;\n  }\n\n  return (\n    <main id=\"home\" className=\"home\">\n      <Lesson {...state} onSelectLesson={onSelectLesson} onlyActiveLessons />\n      {/* <Notification {...state.notification} onClose={onNotificationClose} />\n      <Loader active={state.loading} /> */}\n    </main>\n  );\n}\n\nHomePage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nimport Layout from '../../components/Layout';\n\nexport const LoginLayout = styled(Layout)`\n  align-items: center;\n  display: flex;\n  min-height: 100vh;\n  justify-content: center;\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  :last-of-type {\n    margin: 2rem 0 0 0;\n  }\n`;\n\nexport const Label = styled.label`\n  color: var(--primaryColor);\n  font-size: 1.6rem;\n`;\n\nexport const LabelHelper = styled.label`\n  color: rgba(255, 255, 255, 0.56);\n  font-size: 1.4rem;\n  margin: 0.64rem 0 0 0;\n`;\n\nexport const Input = styled.input`\n  background: var(--dark);\n  border: none;\n  border-radius: 4px;\n  color: var(--primaryColor);\n  font-size: 1.6rem;\n  outline-color: transparent;\n  margin: 1rem 0 0 0;\n  padding: 0.8rem 1.6rem;\n  transition: background-color 400ms, color 400ms;\n  will-change: background-color, color;\n  ::placeholder {\n    font-size: 1.6rem;\n    color: rgba(255, 255, 255, 0.4);\n  }\n\n  :focus {\n    background-color: var(--darkest);\n    color: var(--secondaryColor);\n  }\n`;\n\nexport const Form = styled.form`\n  padding: 3.2rem;\n`;\n\nexport const Wrapper = styled.section`\n  background-color: var(--darkest);\n  box-shadow: 2px 4px 8px rgba(0, 0, 0, 0.32);\n  margin: 0 auto;\n  max-width: 48rem;\n  width: 92%;\n`;\n\nexport const Header = styled.div`\n  background-color: var(--primaryColor);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.04);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  padding: 3.2rem;\n`;\n\nexport const Title = styled.h1`\n  color: var(--dark);\n  font-size: 1.8rem;\n  font-weight: 600;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: var(--primaryColor);\n  border: none;\n  border-radius: 4px;\n  color: var(--dark);\n  cursor: pointer;\n  font-size: 1.6rem;\n  font-weight: 600;\n  margin: 3.2rem 0 0 0;\n  padding: 0.8rem 2rem;\n  text-align: center;\n  text-transform: uppercase;\n  transform-origin: center;\n  transition: background-color 400ms, transform 320ms;\n  width: 100%;\n  will-change: background-color, transform;\n\n  :hover {\n    background-color: rgba(255, 200, 20, 0.96);\n  }\n\n  :active {\n    transform: scale(0.88);\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { $store, $auth } from '../../services';\n\nimport Notification from '../../components/Notification';\nimport Loader from '../../components/Loader';\n\nimport * as S from './styled';\n\nconst initialState = {\n  notification: {\n    active: false,\n    timeout: 5000,\n    title: '',\n    content: '',\n  },\n  loading: false,\n};\n\nfunction Login({ history }) {\n  const [state, setState] = useState(initialState);\n\n  function onLoad() {\n    $store.clean();\n  }\n\n  function onSubmitHandler(e) {\n    e.preventDefault();\n\n    const payload = Object.fromEntries(\n      Array.from(e.target.elements)\n        .filter(each => each.nodeName === 'INPUT')\n        .map(each => [each.id, each.value]),\n    );\n\n    setState(prev => ({ ...prev, loading: true }));\n    $auth\n      .login(payload)\n      .then(() => {\n        history.push('/minhas-aula');\n      })\n      .catch(err => {\n        const defaultMsg =\n          'Ocorreu um erro ao tentar autorizar sua conta, por favor, verifique os dados e tente novamente.';\n        const title = 'Ooops...';\n        const content =\n          err.status === 500 ? defaultMsg : err.data.message || defaultMsg;\n\n        return setState(prev => ({\n          ...prev,\n          notification: { ...prev.notification, active: true, title, content },\n        }));\n      })\n      .finally(() => setState(prev => ({ ...prev, loading: false })));\n  }\n\n  function onNotificationClose() {\n    setState(prev => ({\n      ...prev,\n      notification: { ...prev.notification, active: false },\n    }));\n  }\n\n  useEffect(onLoad, []);\n  return (\n    <S.LoginLayout title=\"Entrar\">\n      <S.Wrapper>\n        <S.Header>\n          <S.Title>Área de Alunos</S.Title>\n        </S.Header>\n        <S.Form onSubmit={onSubmitHandler}>\n          <S.InputGroup>\n            <S.Label htmlFor=\"email\">Email*:</S.Label>\n            <S.Input\n              name=\"email\"\n              id=\"email\"\n              type=\"email\"\n              minlength=\"7\"\n              placeholder=\"Qual email contou pra gente?\"\n              required\n            />\n          </S.InputGroup>\n          <S.InputGroup>\n            <S.Label htmlFor=\"passwd\">Senha*:</S.Label>\n            <S.LabelHelper>DDD + Telefone, apenas os números</S.LabelHelper>\n            <S.Input\n              name=\"passwd\"\n              id=\"passwd\"\n              type=\"password\"\n              minlength=\"11\"\n              maxlength=\"11\"\n              placeholder=\"Lembra do seu WhatsApp?\"\n              required\n            />\n          </S.InputGroup>\n          <S.SubmitButton type=\"submit\">Entrar</S.SubmitButton>\n        </S.Form>\n      </S.Wrapper>\n      <Notification {...state.notification} onClose={onNotificationClose} />\n      <Loader active={state.loading} />\n    </S.LoginLayout>\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Login;\n","import React from 'react';\n\nimport { Home, Lessons, Login } from '../pages';\n\nexport default [\n  // {\n  //   name: 'Lessons',\n  //   path: '/minhas-aulas',\n  //   component: props => <Lessons {...props} />,\n  // },\n  // {\n  //   name: 'Login',\n  //   path: '/entrar',\n  //   component: props => <Login {...props} />,\n  // },\n  {\n    name: 'home',\n    path: '*',\n    exact: true,\n    component: props => <Home {...props} />,\n  },\n];\n","import RootRoutes from './root.routes';\n\nexport default [...RootRoutes];\n","import { css } from 'styled-components';\n\nconst colors = css`\n  :root {\n    --primaryColor: #ffc813;\n    --secondaryColor: #ff9600;\n    --auxColor: #2ecc71;\n    --auxColor2: #082e55;\n\n    --dark: #001326;\n    --darkest: #000;\n    --darkBlue: #001326;\n\n    --light: #ededed;\n    --lightest: #fff;\n  }\n`;\n\nexport default colors;\n","import { createGlobalStyle } from 'styled-components';\n\nimport colors from './colors';\n\nconst GlobalStyles = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Titillium+Web&display=swap');\n\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  b,\n  u,\n  i,\n  center,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n      margin: 0;\n      padding: 0;\n      border: 0;\n      vertical-align: baseline;\n  }\n\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  section {\n      display: block;\n  }\n\n  body {\n      line-height: 1;\n  }\n\n  ol,\n  ul {\n      list-style: none;\n  }\n\n  blockquote,\n  q {\n      quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n      content: \"\";\n      content: none;\n  }\n\n  table {\n      border-collapse: collapse;\n      border-spacing: 0;\n  }\n\n  button, a {\n    cursor: pointer;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  *::before,\n  *,\n  *::after {\n      box-sizing: border-box;\n      font-family: \"Titillium Web\", \"Roboto\", Helvetica, Arial, sans-serif;\n      font-size: 10px;\n      font-stretch: normal;\n      font-style: normal;\n      font-weight: normal;\n      text-rendering: optimizeLegibility;\n  }\n\n  ${colors};\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { App as Config } from './config';\n\nimport Routes from './routes';\n\nimport { GlobalStyle } from './styles';\n\nconst AppContainer = styled.div`\n  background: linear-gradient(to right bottom, var(--darkest), var(--dark));\n  min-height: 100vh;\n`;\n\nfunction App() {\n  return (\n    <Router basename={Config.publicURL}>\n      <AppContainer className=\"App\">\n        <GlobalStyle />\n        <Switch>\n          {Routes.map(route => (\n            <Route key={route.name} {...route} />\n          ))}\n        </Switch>\n      </AppContainer>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}